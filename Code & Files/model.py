import pandas as pd
import numpy as np
import pickle
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.feature_selection import SelectFromModel
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier


malData = pd.read_csv("MalwareData.csv", sep="|")

legit = malData[0:41323].drop(["legitimate"], axis=1)
mal = malData[41323::].drop(["legitimate"], axis=1)

data_in = malData.drop(["Name", "md5", "legitimate"], axis=1).values
mean_features = np.mean(data_in, axis=0)
print(mean_features)
# labels = malData["legitimate"].values
labels = malData.legitimate
extratrees = ExtraTreesClassifier().fit(data_in, labels)
select = SelectFromModel(extratrees, prefit=True)
data_in_new = select.transform(data_in)

features = data_in_new.shape[1]
importances = extratrees.feature_importances_
indices = np.argsort(importances)[::-1]

for f in range(features):
    print("%d"%(f+1), malData.columns[2+indices[f]], importances[indices[f]])

data_train, data_test, value_train, value_test = train_test_split(data_in_new, labels, test_size=0.2)
model = RandomForestClassifier(n_estimators=50)

model.fit(data_train, value_train)

testing_accuracy = model.score(data_test, value_test) * 100
print("Testing Accuracy: ", testing_accuracy, "%")


with open("saveModel3.pkl", "wb") as f:
    pickle.dump((model, select, data_train, data_test, value_train, value_test , mean_features), f)

